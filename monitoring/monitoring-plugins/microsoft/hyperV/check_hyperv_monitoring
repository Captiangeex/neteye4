#! /usr/bin/perl
#

# Compare all HyperV machines if under monitoring configuration
#
# This script is published under the GPLv3 license.
# (C) 2018 Patrick Zambelli, WÃ¼rth-Phoenix GmbH
#
# Changelog: 2018-09-05 Creation of script
#

use strict;
use warnings;
use DBI;

# PLEASE EDIT THIS
my $SERVICE = "NRPE_HyperV_Overview";
my $TMPFILE = "/tmp/check_hyperv_monitoring";

my $dbh = DBI->connect('DBI:mysql:monarch;host=localhost', 'root', ''
                   ) || die "Could not connect to database: $DBI::errstr";


my $str_outDetails = "";
my $int_outDetails = 0;

`echo -e "GET services\nColumns: host_display_name description state state_type acknowledged scheduled_downtime_depth long_plugin_output\nFilter: description = $SERVICE" | unixcat /var/log/nagios/rw/live >$TMPFILE`;

open ( my  $fh => $TMPFILE ) or die "$TMPFILE $!";

my @hyperv_details = "";
my @hyperv_vms;

while(my $line = <$fh>) {
        my @row = split(";",$line);

        @hyperv_details = split("Uptime:", $row[6]);
        foreach (@hyperv_details)
        {
           $_ =~ /.*VM\s+(.*)\s+\(IP:\s+(.*)\s+\)\s+has:/s;
           push @hyperv_vms, $1.";".$2.";".$row[0];
           #print $1 . " and IP: " . $2 . " on HyperV ".$row[0]." \n";
        }
}
close($fh);

my @host;
foreach (@hyperv_vms)
{
        @host = split(";", $_);

        #Check if cluster relation to computer already exists
        my  $query_host_exists = $dbh->prepare('SELECT H.name FROM hosts H WHERE H.name = ? AND H.deleted = 0;');
        $query_host_exists->bind_param(1, $host[0]);
        $query_host_exists->execute() or die $query_host_exists->err_str;
        if (!$query_host_exists->fetchrow_array()){
           $int_outDetails += 1;
           if (defined $host[1]){
                $str_outDetails = $str_outDetails . "VM: '".$host[0]."' IP: '".$host[1]."' missing. HyperV:  '".$host[2]."'<br/>";
           } else {
                $str_outDetails = $str_outDetails . "VM: '".$host[0]."' IP: 'N/A' missing. HyperV:  '".$host[2]."<br/>";
           }
           #print "Host $host[0] does not exist \n";
        #}else{
           #print "Host $host[0] DOES exist \n";
        }
}

#Close DB Connection
$dbh->disconnect();

if ($int_outDetails >= 1){
   print "WARNING: Hyper-V VMs not in monitoring found. VMs found: $int_outDetails | vms_not_monitored=$int_outDetails;1; \n ".$str_outDetails;
   exit 1;
} else {
   print "OK: All Hyper-V VMs are in monitoring. | vms_not_monitored=$int_outDetails;1; \n ".$str_outDetails;
   exit 0;
}
